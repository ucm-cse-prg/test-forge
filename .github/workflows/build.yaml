name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  release:
    name: Build and Release Python Package to GitHub
    runs-on: arc-runner-k8s
    concurrency: release
    permissions:
      id-token: write
      contents: write
    outputs:
      released: ${{ steps.release.outputs.released }}
      version: ${{ steps.release.outputs.version }}
      tag: ${{ steps.release.outputs.tag }}
    steps:
      - name: Generate a token
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.generate_token.outputs.token }}
      - id: release
        name: Python Semantic Release
        uses: python-semantic-release/python-semantic-release@master
        with:
          github_token: ${{ steps.generate_token.outputs.token }}
      - name: Publish package to GitHub Release
        uses: python-semantic-release/publish-action@main
        if: steps.release.outputs.released == 'true'
        with:
          github_token: ${{ steps.generate_token.outputs.token }}
          tag: ${{ steps.release.outputs.tag }}
  docker:
    name: Build and Release Docker Image
    needs: release
    runs-on: arc-runner-k8s
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - name: Generate a token
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ steps.generate_token.outputs.token }}
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ steps.generate_token.outputs.token }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ needs.release.outputs.version }}, ghcr.io/${{ github.repository }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          github-token: ${{ steps.generate_token.outputs.token }}
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.MYTOKEN }}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
